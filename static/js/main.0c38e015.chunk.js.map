{"version":3,"sources":["axios.js","requests.js","Row.js","Banner.js","Nav.js","App.js","index.js"],"names":["instance","axios","create","baseURL","API_KEY","requests","fetchTrending","fetchNetfilxOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaties","opts","height","width","playerVars","autoplay","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","useEffect","a","get","request","data","results","fetchData","className","map","movie","key","id","src","poster_path","backdrop_path","alt","name","videoId","Banner","str","n","setMovie","Math","floor","random","length","style","backgroundImage","backgroundPosition","original_name","overview","substr","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0c38e015.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://api.themoviedb.org/3'\r\n})\r\n\r\nexport default instance","const API_KEY = '26fcfdb208dcb0d333b5fc7d0a80ce05';\r\n\r\nconst requests = {\r\n  fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n  fetchNetfilxOriginals: `/discover/tv?api_key=${API_KEY}&with_network=213`,\r\n  fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n  fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n  fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n  fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n  fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n  fetchDocumentaties: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n}\r\n\r\nexport default requests;","import React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport axios from './axios';\r\nimport requests from './requests';\r\nimport './Row.css';\r\nimport YouTube from 'react-youtube';\r\nimport movieTrailer from 'movie-trailer';\r\n\r\nconst base_url = 'https://image.tmdb.org/t/p/original/';\r\n\r\nconst opts = {\r\n  height: '390',\r\n  width: '100%',\r\n  playerVars: {\r\n    // https://developers.google.com/youtube/player_parameters\r\n    autoplay: 1\r\n  }\r\n};\r\n\r\nfunction Row({ title, fetchUrl, isLargeRow }) {\r\n  const [ movies, setMovies ] = useState([]);\r\n  const [ trailerUrl, setTrailerUrl ] = useState('');\r\n\r\n  useEffect(\r\n    () => {\r\n      async function fetchData() {\r\n        const request = await axios.get(fetchUrl);\r\n        setMovies(request.data.results);\r\n      }\r\n      fetchData();\r\n    },\r\n    [ fetchUrl ]\r\n  );\r\n\r\n  const handleClick = movie => {\r\n    debugger;\r\n    if (trailerUrl) {\r\n      setTrailerUrl('');\r\n    } else {\r\n      movieTrailer(movie.name || '')\r\n        .then(url => {\r\n          const urlParams = new URLSearchParams(new URL(url).search);\r\n          console.log(urlParams);\r\n          debugger;\r\n          setTrailerUrl(urlParams.get('v'));\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <h2>{title}</h2>\r\n\r\n      <div className=\"row__posters\">\r\n        {movies &&\r\n          movies.map(movie => (\r\n            <img\r\n              key={movie.id}\r\n              // onClick={() => handleClick(movie)}\r\n              className={`row__poster ${isLargeRow && 'row__posterLarge'}`}\r\n              src={`${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`}\r\n              alt={movie.name}\r\n            />\r\n          ))}\r\n      </div>\r\n      {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Row;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from './axios';\r\nimport requests from './requests';\r\nimport './Banner.css';\r\n\r\nconst base_url = 'https://image.tmdb.org/t/p/original/';\r\n\r\nfunction Banner() {\r\n  const [ movie, setMovie ] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(requests.fetchNetfilxOriginals);\r\n      setMovie(request.data.results[Math.floor(Math.random() * request.data.results.length)]);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  function truncate(str, n) {\r\n    return str.length > n ? str.substr(0, n - 1) + '...' : str;\r\n  }\r\n\r\n  return (\r\n    <header\r\n      className=\"banner\"\r\n      style={{ backgroundImage: `url(${base_url}${movie.backdrop_path})`, backgroundPosition: 'center center' }}\r\n    >\r\n      <div className=\"banner__contents\">\r\n        <h1>{movie.title || movie.name || movie.original_name}</h1>\r\n        <div className=\"banner__buttons\">\r\n          <button className=\"banner__button\">Play</button>\r\n          <button className=\"banner__button\">My List</button>\r\n        </div>\r\n        <p className=\"banner_description\">{movie.overview && truncate(movie.overview, 500)}</p>\r\n      </div>\r\n      <div className=\"banner__fadeBottom\" />\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './Nav.css';\r\n\r\nfunction Nav() {\r\n  const [ show, handleShow ] = useState(false);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', () => {\r\n      if (window.scrollY > 100) {\r\n        handleShow(true);\r\n      } else {\r\n        handleShow(false);\r\n      }\r\n    });\r\n    return () => {\r\n      window.removeEventListener('scroll');\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className={`nav ${show && 'nav__black'}`}>\r\n      <img\r\n        src=\"https://assets.brand.microsites.netflix.io/assets/493f5bba-81a4-11e9-bf79-066b49664af6_cm_1440w.png?v=21\"\r\n        className=\"nav__logo\"\r\n        alt=\"Netflix Logo\"\r\n      />\r\n      <img\r\n        src=\"https://assets.brand.microsites.netflix.io/assets/493f5bba-81a4-11e9-bf79-066b49664af6_cm_1440w.png?v=21\"\r\n        className=\"nav__logo\"\r\n        alt=\"Netflix Logo\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Row from './Row';\r\nimport requests from './requests';\r\nimport Banner from './Banner';\r\nimport Nav from './Nav';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <Nav />\r\n      <Banner />\r\n      <Row title=\"NETFLIX ORIGINALS\" fetchUrl={requests.fetchNetfilxOriginals} isLargeRow />\r\n      <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending} />\r\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\r\n      <Row title=\"Romantic Movies\" fetchUrl={requests.fetchRomanceMovies} />\r\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies} />\r\n      <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaties} />\r\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}